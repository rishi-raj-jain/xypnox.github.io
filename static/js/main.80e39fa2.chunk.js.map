{"version":3,"sources":["images/logo.svg","images/logos/lttkgp.svg","images/logos/finbox-logo.svg","images/logos/marg.png","images/logos/fifthtry.svg","images/random/blag.png","images/random/dotfiles.png","images/random/fontstaller.png","images/random/gyft2.png","images/random/gymkhana.png","images/random/kalrav.png","images/random/koss.png","images/random/kwoc.png","images/random/metakgp.png","images/random/poems.png","images/random/posters.png","images/random/todxpy.png","images/random/xydark.png","images/skills/design.svg","images/skills/code.svg","images/skills/ui-ux.svg","images/skills/frontend.svg","images/skills/backend.svg","images/superpowers.svg","images/work-art.svg","Navbar.js","NavbarM.js","components/hoverZoom.js","pages/Home.js","components/Section.js","components/Card.js","components/image.js","components/button.js","pages/Projects.js","components/PDFviewer.js","pages/Resume.js","pages/Random.js","pages/Skills.js","Slides.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavList","Navbar","props","className","page","onClick","setState","map","data","index","active","window","open","NavbarM","React","useState","inProp","setInProp","CSSTransition","in","timeout","unmountOnExit","classNames","HoverZoom","calc","x","y","innerHeight","innerWidth","zoom","useSpring","xys","config","mass","tension","friction","sprops","set","div","onMouseMove","clientX","clientY","onMouseLeave","transformOrigin","style","transform","interpolate","s","children","Banner","Home","src","logo","alt","href","rel","target","title","xmlns","width","height","viewBox","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","fill","Section","trim","Card","Image","caption","button","icon","Projects","lttkgpLogo","margLogo","fifthtryLogo","finboxLogo","PDFviewer","containerId","pdfBlob","useEffect","PDFObject","embed","pdfOpenParams","id","Resume","Random","blagImg","poemsImg","postersImg","kossImg","xydarkImg","dotfilesImg","kwocImg","kalravImg","todxpyImg","gyft2Img","fontstallerImg","gymkhanaImg","metakgpImg","Skills","designLogo","frontendLogo","codeLogo","uiuxLogo","backendLogo","images","superpowers","workart","pages","key","Slides","forEach","image","reset","unique","items","from","opacity","enter","leave","App","state","scrollSetState","scrollTo","console","log","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.80e39fa2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c239e495.svg\";","module.exports = __webpack_public_path__ + \"static/media/lttkgp.d1b1f35e.svg\";","module.exports = __webpack_public_path__ + \"static/media/finbox-logo.d5fcf315.svg\";","module.exports = __webpack_public_path__ + \"static/media/marg.c2ade969.png\";","module.exports = __webpack_public_path__ + \"static/media/fifthtry.00f3a2a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/blag.e788eed0.png\";","module.exports = __webpack_public_path__ + \"static/media/dotfiles.a1316950.png\";","module.exports = __webpack_public_path__ + \"static/media/fontstaller.7a3d334b.png\";","module.exports = __webpack_public_path__ + \"static/media/gyft2.09bdb6a3.png\";","module.exports = __webpack_public_path__ + \"static/media/gymkhana.2df2cc8b.png\";","module.exports = __webpack_public_path__ + \"static/media/kalrav.d02bcf21.png\";","module.exports = __webpack_public_path__ + \"static/media/koss.a8991552.png\";","module.exports = __webpack_public_path__ + \"static/media/kwoc.132e7639.png\";","module.exports = __webpack_public_path__ + \"static/media/metakgp.090d667f.png\";","module.exports = __webpack_public_path__ + \"static/media/poems.de26e3f1.png\";","module.exports = __webpack_public_path__ + \"static/media/posters.079218a7.png\";","module.exports = __webpack_public_path__ + \"static/media/todxpy.3aedb2cf.png\";","module.exports = __webpack_public_path__ + \"static/media/xydark.2ce6b2bf.png\";","module.exports = __webpack_public_path__ + \"static/media/design.f69cdc07.svg\";","module.exports = __webpack_public_path__ + \"static/media/code.46723c75.svg\";","module.exports = __webpack_public_path__ + \"static/media/ui-ux.eb223338.svg\";","module.exports = __webpack_public_path__ + \"static/media/frontend.ffd3f1c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/backend.a7f4d199.svg\";","module.exports = __webpack_public_path__ + \"static/media/superpowers.f5cc82c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-art.8be412c4.svg\";","import React from 'react';\nimport * as Icon from 'react-feather';\n\nconst NavList = ['Projects', 'Skills', 'Resume', 'Random'];\n\nexport default function Navbar(props) {\n  return (\n    <div className='navbar'>\n      <div\n        className={'link' + (props.page === 0 ? ' active' : '')}\n        onClick={() => {\n          props.setState({ page: 0 });\n        }}\n      >\n        <Icon.Home></Icon.Home>\n      </div>\n      {NavList.map((data, index) => {\n        let active = props.page === index + 1 ? ' active' : '';\n        return (\n          <div\n            className={'link' + active}\n            onClick={() => {\n              props.setState({ page: index + 1 });\n            }}\n          >\n            {data}\n          </div>\n        );\n      })}\n      <div\n        className='link blog-link'\n        onClick={() => {\n          window.open('https://www.xypnox.com/blag/', '_blank');\n        }}\n      >\n        Blog <Icon.ExternalLink></Icon.ExternalLink>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport { CSSTransition } from 'react-transition-group';\n\nconst NavList = ['Home', 'Projects', 'Skills', 'Resume', 'Random'];\n\nexport default function NavbarM(props) {\n  const [inProp, setInProp] = React.useState(false);\n  return (\n    <div className='navbar-mob'>\n      <div\n        className='menu-mobile'\n        onClick={() => {\n          setInProp(!inProp);\n        }}\n      >\n        <Icon.Menu></Icon.Menu>\n        <span>xypnox</span>\n      </div>\n      <CSSTransition\n        in={inProp}\n        timeout={250}\n        unmountOnExit\n        classNames='navbar-m'\n      >\n        <div className='navbar-m'>\n          {NavList.map((data, index) => {\n            let active = props.page === index ? ' active' : '';\n            return (\n              <div\n                className={'link' + active}\n                onClick={() => {\n                  props.setState({ page: index });\n                  setInProp(false);\n                }}\n              >\n                {data}\n              </div>\n            );\n          })}\n          <div\n            className='link blog-link'\n            onClick={() => {\n              window.open('https://www.xypnox.com/blag/', '_blank');\n            }}\n          >\n            Blog <Icon.ExternalLink></Icon.ExternalLink>\n          </div>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nexport default function HoverZoom(props) {\n  const calc = (x, y) => [\n    -(y - window.innerHeight / 2) / 15,\n    (x - window.innerWidth / 2) / 15,\n    props.zoom || 1.2,\n  ];\n\n  const trans = (x, y, s) =>\n    `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\n  const [sprops, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 40 },\n  }));\n\n  return (\n    <animated.div\n      className='image-zoom'\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      transformOrigin='center center'\n      style={{ transform: sprops.xys.interpolate(trans) }}\n    >\n      {props.children}\n    </animated.div>\n  );\n}\n\nexport function Banner(props) {\n  return (\n    <div className='banner'>\n      <HoverZoom>{props.children}</HoverZoom>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport HoverZoom from '../components/hoverZoom';\n\nimport * as Icon from 'react-feather';\n\nimport logo from '../images/logo.svg';\n\nexport default function Home() {\n  return (\n    <div className='slide home'>\n      <div className='logo'>\n        <HoverZoom zoom={1.2}>\n          <img src={logo} alt='' />\n        </HoverZoom>\n      </div>\n      <div className='content'>\n        Hi, I am xypnox! <br />\n        <br />\n        I like to code, design, write, <br />\n        sometimes poetry. <br />\n        <br />\n        I love music, books, art, <br />\n        space and nature. <br />\n        <br />\n        I prefer to listen and think, <br />\n        watch and learn. <br />\n        <div className='social'>\n          <a\n            href='https://github.com/xypnox'\n            rel='noopener noreferrer'\n            target='_blank'\n            title='GitHub'\n          >\n            <Icon.GitHub></Icon.GitHub>\n          </a>\n          <a\n            href='https://twitter.com/xypnox'\n            rel='noopener noreferrer'\n            target='_blank'\n            title='Twitter'\n          >\n            <Icon.Twitter></Icon.Twitter>\n          </a>\n          <a\n            href='https://behance.net/xypnox'\n            rel='noopener noreferrer'\n            target='_blank'\n            title='Behance'\n          >\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              width='24'\n              height='24'\n              viewBox='0 0 24 24'\n            >\n              <path\n                d='M21 6L16 6'\n                stroke='currentColor'\n                stroke-width='2'\n                stroke-linecap='round'\n                stroke-linejoin='round'\n              />\n              <path\n                d='M1 18H5.29819e-07C5.29819e-07 18.5523 0.447716 19 1 19L1 18ZM1 10.4545C0.447715 10.4545 0 10.9023 0 11.4545C0 12.0068 0.447715 12.4545 1 12.4545V10.4545ZM1 6V5C0.447716 5 5.29819e-07 5.44772 5.29819e-07 6H1ZM8.88889 8.72727C8.88889 9.664 8.11033 10.4545 7.11111 10.4545V12.4545C9.18014 12.4545 10.8889 10.803 10.8889 8.72727H8.88889ZM7.11111 7C8.11033 7 8.88889 7.79055 8.88889 8.72727H10.8889C10.8889 6.65154 9.18014 5 7.11111 5V7ZM10 14.7273C10 15.9652 8.97271 17 7.66667 17V19C10.0425 19 12 17.1043 12 14.7273H10ZM7.66667 12.4545C8.97271 12.4545 10 13.4893 10 14.7273H12C12 12.3503 10.0425 10.4545 7.66667 10.4545V12.4545ZM7.66667 17H1V19H7.66667V17ZM7.66667 10.4545H1V12.4545H7.66667V10.4545ZM7.11111 5H1V7H7.11111V5ZM2 18V6H5.29819e-07V18H2Z'\n                fill='currentColor'\n              />\n              <path\n                d='M14 13.5C14 15.9853 16.0147 18 18.5 18C19.6413 18 20.6833 17.5752 21.4766 16.875M14 13.5C14 11.0147 16.0147 9 18.5 9C20.9853 9 23 11.0147 23 13.5H14Z'\n                stroke='currentColor'\n                stroke-width='2'\n                stroke-linecap='round'\n                stroke-linejoin='round'\n              />\n            </svg>\n          </a>\n          <a\n            href='https://t.me/xypnox'\n            rel='noopener noreferrer'\n            target='_blank'\n            title='Telegram'\n          >\n            <Icon.Send></Icon.Send>\n          </a>\n          <a\n            href='mailto:xypnox@gmail'\n            rel='noopener noreferrer'\n            target='_blank'\n            title='Email'\n          >\n            <Icon.Mail></Icon.Mail>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Section(props) {\n  let classNames = props.className || '';\n  return (\n    <div className={('section ' + classNames).trim()}>{props.children}</div>\n  );\n}\n","import React from 'react';\n\nexport default function Card(props) {\n  return <div className={'card'}>{props.children}</div>;\n}\n","import React from 'react';\n\nexport default function Image({ src, alt, caption }) {\n  return (\n    <div className='image-component'>\n      <img src={src} alt={alt} />\n      {caption ? <div className='caption'>{caption}</div> : ''}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function button({ href, icon, children }) {\n  return (\n    <a className='button' href={href} rel='noopener noreferrer' target='_blank'>\n      {icon}\n      {children}\n    </a>\n  );\n}\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nimport { Banner } from '../components/hoverZoom';\nimport Section from '../components/Section';\nimport Card from '../components/Card';\nimport Image from '../components/image';\nimport Button from '../components/button';\n\nimport lttkgpLogo from '../images/logos/lttkgp.svg';\nimport finboxLogo from '../images/logos/finbox-logo.svg';\nimport margLogo from '../images/logos/marg.png';\nimport fifthtryLogo from '../images/logos/fifthtry.svg';\n\nexport default function Projects() {\n  return (\n    <div className='slide projects'>\n      <Banner>\n        <h1>Projects</h1>\n        <p>The work stuff!</p>\n      </Banner>\n\n      <div className='container'>\n        <Section className='flipped lttkgp'>\n          <Image src={lttkgpLogo} alt='Work/Art' />\n          <Card>\n            <h2>\n              <span className='h2-text'>LTTKGP</span>\n            </h2>\n            <p>\n              Listen to this KGP is a facebook group where people share songs\n              they find interesting.\n            </p>\n            <p>\n              LTTKGP webapp provides a way to browse and listen to the songs\n              posted with a better interface and queued playlists.\n            </p>\n            <p>\n              I designed and developed the frontend with React/Typescript from\n              scratch.\n            </p>\n            <Button href='https://lttkgp.com' icon={<Icon.Music />}>\n              Web App\n            </Button>\n            <Button href='https://github.com/lttkgp/' icon={<Icon.GitHub />}>\n              Github Org\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='marg'>\n          <Image src={margLogo} alt='Work/Art' />\n\n          <Card>\n            <h2>\n              <span className='h2-text'>MARG</span>{' '}\n              <span className='tag gold'>Gold InterIIT</span>\n            </h2>\n            <p>\n              Monitor Assess Report Guide, a complete ecosystem for the citizens\n              and government to ease the process of road maintenance and\n              progress checking.\n            </p>\n\n            <p>\n              We tried to incorporate a sense of ownership towards their\n              surroundings as well as to motivate them using the stories of\n              other people who have successfully helped the government.\n            </p>\n\n            <p>\n              It won Gold in InterIIT Tech 2020 Coding hackathon. I worked on\n              the UI/UX and frontend of the application.\n            </p>\n          </Card>\n        </Section>\n\n        <Section className='flipped fifthtry'>\n          <Image src={fifthtryLogo} alt='Work/Art' />\n\n          <Card>\n            <h2>\n              <span className='h2-text'>Fifthtry</span>{' '}\n              <span className='tag intern'>Full Stack Intern</span>\n            </h2>\n            <p>\n              Fifthtry is a documentation tool that integrates with Github Pull\n              Request, to ensure that no code goes live without being updated in\n              the documentation.\n            </p>\n\n            <p>\n              I worked on both the backend and frontend of the application. It's\n              written in Rust and Elm combined in the specialized Realm\n              framework. I added several small features and pages. I also\n              created the stats ingestion system for the backend.\n            </p>\n            <Button href='https://fifthtry.com' icon={<Icon.Globe />}>\n              Fifthtry\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='finbox'>\n          <Image src={finboxLogo} alt='Work/Art' />\n\n          <Card>\n            <h2>\n              <span className='h2-text'>FinBox</span>{' '}\n              <span className='tag intern'>Frontend Intern</span>\n            </h2>\n            <p>\n              Finbox is a fintech company that allows you to embed lending\n              infratstructure in your application.\n            </p>\n\n            <p>\n              I worked on the landing page and the entire website from scratch.\n              I utilized react-static to generate static pages with instant\n              navigation. I also organized Design Sprints to target specific\n              audiences, started from scratch with UI/UX to develop a unique\n              brand identity for the company. Made personalized icons.\n              illustrations, animations, etc.\n            </p>\n            <Button href='https://finbox.in' icon={<Icon.Globe />}>\n              Finbox\n            </Button>\n          </Card>\n        </Section>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PDFObject from 'pdfobject';\n\nexport default function PDFviewer(props) {\n  const { containerId, pdfBlob } = props;\n  React.useEffect(() => {\n    PDFObject.embed(pdfBlob, `#${containerId}`, {\n      pdfOpenParams: {\n        zoom: 'FitW',\n      },\n    });\n  }, [containerId, pdfBlob]);\n  return <div id={containerId} />;\n}\n","import React from 'react';\nimport { Banner } from '../components/hoverZoom';\nimport Button from '../components/button';\nimport PDFviewer from '../components/PDFviewer';\n\nimport * as Icon from 'react-feather';\n\nexport default function Resume() {\n  return (\n    <div className='slide resume'>\n      <Banner>\n        <h1>Resume</h1>\n        <p>The 1 document that (apparently) matters</p>\n      </Banner>\n\n      <div className='pdf'>\n        <div className='download-resume'>\n          <Button href='main.pdf' icon={<Icon.Download />}>\n            Download Resume\n          </Button>\n        </div>\n        <PDFviewer containerId='resume-pdf' pdfBlob='main.pdf'></PDFviewer>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Banner } from '../components/hoverZoom';\nimport Card from '../components/Card';\nimport Section from '../components/Section';\nimport Image from '../components/image';\nimport Button from '../components/button';\n\nimport * as Icon from 'react-feather';\n\nimport blagImg from '../images/random/blag.png';\nimport dotfilesImg from '../images/random/dotfiles.png';\nimport fontstallerImg from '../images/random/fontstaller.png';\nimport gyft2Img from '../images/random/gyft2.png';\nimport gymkhanaImg from '../images/random/gymkhana.png';\nimport kalravImg from '../images/random/kalrav.png';\nimport kossImg from '../images/random/koss.png';\nimport kwocImg from '../images/random/kwoc.png';\nimport metakgpImg from '../images/random/metakgp.png';\nimport poemsImg from '../images/random/poems.png';\nimport postersImg from '../images/random/posters.png';\nimport todxpyImg from '../images/random/todxpy.png';\nimport xydarkImg from '../images/random/xydark.png';\n\nexport default function Random() {\n  return (\n    <div className='slide random'>\n      <Banner>\n        <h1>Random</h1>\n        <p>Side Projects // literature // experiments</p>\n      </Banner>\n\n      <Section>\n        <blockquote>\n          “Fairy tales are more than true: not because they tell us that dragons\n          exist, but because they tell us that dragons can be beaten.”\n          <br />― Neil Gaiman, Coraline.\n        </blockquote>\n      </Section>\n\n      <div className='container'>\n        <Section className='blag'>\n          <Image src={blagImg} alt='' />\n          <Card>\n            <h2>Blag</h2>\n            <p>My Blog!</p>\n            <p>\n              It is made with the static site generator called Zola. This blog\n              is Open Source and the code is availabe at Github.\n            </p>\n            <p>\n              I created my own theme for Zola to give it a cool look. xyBlag,\n              teh theme, is minimal, modern, responsive; featuring dark mode,\n              categories, tags and pagination.\n            </p>\n            <Button href='https://www.xypnox.com/blag/' icon={<Icon.PenTool />}>\n              The Blag\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='poems flipped'>\n          <Image src={poemsImg} alt='' />\n          <Card>\n            <h2>Poems</h2>\n            <p>\n              I have written these poems whenever I got time here and there. I\n              am no professional writer and consider poems as a way to get my\n              emotions on paper.\n            </p>\n            <p>\n              Some of these poems are based on events in my life while some are\n              pure figments of imagination.\n            </p>\n            <p>The website is built with Next.js</p>\n            <Button href='https://poems.xypnox.com' icon={<Icon.Feather />}>\n              poems.xypnox.com\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='posters'>\n          <Image src={postersImg} alt='' />\n          <Card>\n            <h2>Posters</h2>\n            <p>\n              I have been making posters for a throughout my time at college. I\n              have made posters for several societies and for various events.\n            </p>\n            <p>\n              I have collected them all on posters.xypnox.com for your viewing\n              pleasure.\n            </p>\n            <p>\n              Also I have written a blog post on how to make posters, if you\n              want to learn the art.\n            </p>\n            <Button href='https://posters.xypnox.com/' icon={<Icon.Layers />}>\n              Posters\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='koss-design flipped'>\n          <Image src={kossImg} alt='' />\n          <Card>\n            <h2>KOSS Design</h2>\n            <p>\n              I have designed lots of stuff as a member of KOSS. A lot of it is\n              present in the repo at kossiitkgp/design!\n            </p>\n            <p>\n              The designs include icons, backgrounds, posters, certificates etc.\n            </p>\n            <Button\n              href='https://github.com/kossiitkgp/design'\n              icon={<Icon.GitHub />}\n            >\n              kossiitkgp/design\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='xydark'>\n          <Image src={xydarkImg} alt='' />\n          <Card>\n            <h2>xyDark</h2>\n            <p>\n              A minimalist theme for documentation, note-taking and code\n              snippets for Typora.\n            </p>\n            <p>\n              I created this theme to match my setup. It is inspired by the\n              standard typewriter feel, and the monospaced font: Iosevka makes\n              it a pretty theme to look at.\n            </p>\n            <Button\n              href='https://theme.typora.io/theme/Xydark/'\n              icon={<Icon.Layout />}\n            >\n              xyDark for Typora\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='dotfiles flipped'>\n          <Image src={dotfilesImg} alt='' />\n          <Card>\n            <h2>Dotfiles</h2>\n            <p>My system's dotfile!</p>\n            <p>\n              I have spent years customizing my i3wm to what I want it to look\n              like. And these files are the culmination of all the\n              configuration.\n            </p>\n            <Button\n              href='https://github.com/xypnox/dotfiles/'\n              icon={<Icon.GitHub />}\n            >\n              xypnox/dotfiles\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='kwoc'>\n          <Image src={kwocImg} alt='' />\n          <Card>\n            <h2>KWoC</h2>\n            <p>\n              Kharagpur Winter of Code is a 5-week long online program for\n              students who are new to open source software development. The\n              program not only helps students to get involved in open source,\n              but also prepares them for many open source summer programs.\n            </p>\n            <p>\n              As a member of KOSS, I have been responsible for maintaining the\n              older KWoC website, and starting the newer flashier React based\n              one.\n            </p>\n            <Button href='https://kwoc.kossiitkgp.org/' icon={<Icon.Globe />}>\n              KWoC\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='kalrav flipped'>\n          <Image src={kalravImg} alt='' />\n          <Card>\n            <h2>Kalrav</h2>\n            <p>\n              Kalrav was my first foray with react. I created a twitter client\n              that would display text only tweets.\n            </p>\n            <p>\n              It involved Client side routing, state management, OAuth,\n              Communication with Twitter's APIs and was hosted on Heroku.\n            </p>\n            <p>\n              It is unmaintained as of now but can be used as a template or a\n              guide for a complete minimal app.\n            </p>\n            <Button href='https://kalrav.herokuapp.com/' icon={<Icon.Globe />}>\n              Kalrav\n            </Button>\n            <Button\n              href='https://github.com/xypnox/kalrav/'\n              icon={<Icon.GitHub />}\n            >\n              xypnox/kalrav\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='todxpy'>\n          <Image src={todxpyImg} alt='' />\n          <Card>\n            <h2>Todxpy</h2>\n            <p>\n              Todx is a commandl ine todo manager. It stores its data in a JSON\n              file depending on the platform it's installed. Currently we use a\n              few python libraries to add different features to the application.\n            </p>\n            <p>\n              I developed this CLI app to practice python scripting, packaging\n              and distribution. It also has nice colored output and reusable\n              JSON file as a database.\n            </p>\n            <Button\n              href='https://github.com/xypnox/todxpy/'\n              icon={<Icon.GitHub />}\n            >\n              xypnox/todxpy\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='gyft2 flipped'>\n          <Image src={gyft2Img} alt='' />\n          <Card>\n            <h2>Gyft2</h2>\n            <p>\n              Get Your Freaking Timetable REBORN , A version of metakgp/gyft\n              that does not need password.\n            </p>\n            <p>\n              Gyft is a lifesaver but it requires your password, so this version\n              of gyft works without using your ERP password so that there is no\n              need to worry about privacy and security!\n            </p>\n            <Button\n              href='https://github.com/xypnox/gyft2/'\n              icon={<Icon.GitHub />}\n            >\n              xypnox/gyft2\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='fontstaller'>\n          <Image src={fontstallerImg} alt='' />\n          <Card>\n            <h2>Fontstaller</h2>\n            <p>\n              As anyone who might be familiar with installing fonts on linux\n              would be familiar that it is very hard to install multiple fonts\n              simultaneously while avoiding multiple copies of the fonts.\n            </p>\n            <p>\n              Fontstaller is a command line script to batch install fonts on\n              Linux.\n            </p>\n            <Button\n              href='https://github.com/xypnox/fontstaller'\n              icon={<Icon.GitHub />}\n            >\n              xypnox/fontstaller\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='gymkhana flipped'>\n          <Image src={gymkhanaImg} alt='' />\n          <Card>\n            <h2>Gymkhana</h2>\n            <p>\n              During my tenure as Asst. Tech Cordinator at Technology Student's\n              Gymkhana at IIT KGP, I designed and developed it's website and\n              blog.\n            </p>\n\n            <Button\n              href='http://www.gymkhana.iitkgp.ac.in/index.php'\n              icon={<Icon.Globe />}\n            >\n              Gymkhana\n            </Button>\n          </Card>\n        </Section>\n\n        <Section className='metakgp'>\n          <Image src={metakgpImg} alt='' />\n          <Card>\n            <h2>MetaKGP</h2>\n            <p>\n              From time to time I hop in some MetaKGP projects and try rewriting\n              or redesigning the frontend. Or sometimes just solve a few bugs\n              here and there.\n            </p>\n            <p>I really want to contribute more though!</p>\n            <Button href='https://github.com/metakgp' icon={<Icon.GitHub />}>\n              MetaKGP\n            </Button>\n          </Card>\n        </Section>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Banner } from '../components/hoverZoom';\n\nimport Section from '../components/Section';\nimport Card from '../components/Card';\nimport Image from '../components/image';\n\nimport designLogo from '../images/skills/design.svg';\nimport codeLogo from '../images/skills/code.svg';\nimport uiuxLogo from '../images/skills/ui-ux.svg';\nimport frontendLogo from '../images/skills/frontend.svg';\nimport backendLogo from '../images/skills/backend.svg';\n\nexport default function Skills() {\n  return (\n    <div className='slide skills'>\n      <Banner>\n        <h1>Skills</h1>\n        <p>The tools for the trade</p>\n      </Banner>\n\n      <div className='container'>\n        <Section className='flipped design'>\n          <Image src={designLogo} alt='Work/Art' />\n          <Card>\n            <h2>Design</h2>\n            <p>\n              From graphics, to user elements, from themes, to design-systems,\n              from icons to typography, I love to design everything.\n            </p>\n            <p>\n              And I obsess over perfection. I am flexible in medium and rigid in\n              quality.\n            </p>\n          </Card>\n        </Section>\n        <Section className='frontend'>\n          <Image src={frontendLogo} alt='Work/Art' />\n          <Card>\n            <h2>Frontend</h2>\n            <p>\n              I have experience in React, Next and HTML5/CSS/JS along with\n              several templating systems.\n            </p>\n            <p>\n              I prefer to write my own components, and styles that go with it.\n            </p>\n            <p>I want to have absolute control over all the pixels.</p>\n          </Card>\n        </Section>\n\n        <Section className='flipped code'>\n          <Image src={codeLogo} alt='Work/Art' />\n          <Card>\n            <h2>General Programming</h2>\n            <p>\n              Given my curious mindset, I have tested the waters of various\n              fields: Databases, Scripting, Web Scraping, DS, Micro-services,\n              CLI tools to name a few.\n            </p>\n            <p>\n              The core of it all is the basic principle of identifying the\n              problem and testing multiple focused approaches till I figure out\n              the optimum solution.\n            </p>\n          </Card>\n        </Section>\n\n        <Section className='code'>\n          <Image src={uiuxLogo} alt='Work/Art' />\n          <Card>\n            <h2>UI / UX</h2>\n            <p>\n              I design the user experience and then style the user interface\n              myself for almost all of the projects I work on.\n            </p>\n            <p>\n              I believe that for a product to be amazing, it has to focus on the\n              user above everything. Before trying to look good, it needs to\n              work. And then it should fit the design system while maintaining a\n              spice of its own.\n            </p>\n          </Card>\n        </Section>\n\n        <Section className='flipped code'>\n          <Image src={backendLogo} alt='Work/Art' />\n          <Card>\n            <h2>Backend</h2>\n            <p>\n              While I obsess over frontend, I also recognize that a lot of the\n              functionality of an app is enabled by it's backend.\n            </p>\n            <p>\n              I have worked with Flask and Rust for backend, with databases,\n              APIs, request handling, etc.\n            </p>\n          </Card>\n        </Section>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Transition, animated } from 'react-spring/renderprops';\n\nimport Home from './pages/Home';\nimport Projects from './pages/Projects';\nimport Resume from './pages/Resume';\nimport Random from './pages/Random';\nimport Skills from './pages/Skills';\n\nimport superpowers from './images/superpowers.svg';\nimport logo from './images/logo.svg';\nimport workart from './images/work-art.svg';\n\nconst images = [logo, superpowers, workart];\nconst pages = [\n  (style) => (\n    <animated.div style={{ ...style }} key='slide-0'>\n      <Home></Home>\n    </animated.div>\n  ),\n  (style) => (\n    <animated.div style={{ ...style }} key='slide-1'>\n      <Projects></Projects>\n    </animated.div>\n  ),\n  (style) => (\n    <animated.div style={{ ...style }} key='slide-2'>\n      <Skills></Skills>\n    </animated.div>\n  ),\n  (style) => (\n    <animated.div style={{ ...style }} key='slide-3'>\n      <Resume></Resume>\n    </animated.div>\n  ),\n  (style) => (\n    <animated.div style={{ ...style }} key='slide-5'>\n      <Random></Random>\n    </animated.div>\n  ),\n];\n\nexport default function Slides(props) {\n  useEffect(() => {\n    images.forEach((image) => {\n      new Image().src = image;\n    });\n  }, []);\n\n  return (\n    <div className='slides'>\n      <Transition\n        reset\n        unique\n        items={props.page}\n        from={{ opacity: 0, transform: 'translate3d(500px, 100px, -500px)' }}\n        enter={{ opacity: 1, transform: 'translate3d(0px, 0px, 0px)' }}\n        leave={{\n          opacity: 0,\n          transform: 'translate3d(-500px, -100px, -500px)',\n        }}\n      >\n        {(index) => pages[index]}\n      </Transition>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport NavbarM from './NavbarM';\nimport Slides from './Slides';\nimport './App.scss';\n\nimport logo from './images/logo.svg';\n\nconst images = [logo];\n\nfunction App() {\n  let [state, setState] = useState({\n    page: 0,\n  });\n\n  let scrollSetState = (state) => {\n    window.scrollTo(0, 0);\n    setState(state);\n  };\n\n  React.useEffect(() => {\n    images.forEach((image) => {\n      new Image().src = image;\n    });\n  }, []);\n\n  console.log(state);\n\n  return (\n    <div className='App'>\n      <Slides page={state.page}></Slides>\n\n      <div className='navbar-container'>\n        <Navbar setState={scrollSetState} page={state.page}></Navbar>\n        <NavbarM setState={scrollSetState} page={state.page}></NavbarM>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}