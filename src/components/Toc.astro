---
import type { Heading, NestedHeading } from "../dataTypes";
import TocHeading from "./TocHeading.astro";

interface Props {
  headings: Heading[];
}

const { headings } = Astro.props;

function buildToc(headings: Heading[]) {
  const toc: NestedHeading[] = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}

const toc = buildToc(headings);
---

<nav class="toc">
  <ul>
    {toc.map((heading) => <TocHeading heading={heading} />)}
  </ul>
</nav>

<style>
nav.toc {
  padding: 1rem;
  font-family: var(--font-family);
}

nav.toc ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
</style>
