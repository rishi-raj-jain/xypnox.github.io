---
import Icon from "astro-icon";

interface Props {
  title?: string;
  // Links title
  linkTitle?: string;
  icon?: string;
  image?: string;
  links?: {
    title: string;
    href: string;
  }[];
}
const { title, icon, image, links, linkTitle } = Astro.props;
---

<div class={ "container-wrapper" + (image ? " with-image" : "") }>
  {image && <img src={image} alt={title} />}
  {title && 
    <h1>
      {icon && <Icon name={icon} />}
      {linkTitle ? <a class="text-gradient-fx" href={linkTitle}> {title}</a> : title}
    </h1>
  }
  <slot name="description" />
  <div class="container-content">
      {links && links.map((link) => (
        <a class="container-link" href={link.href}>
          <span>
          {link.title}
          </span>
        </a>
      ))}
    <slot />
  </div>
  <slot name="end" />
</div>

<style>
  .container-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1em;
    width: 100%;
    padding: 2rem;
    background-color: var(--background);
    border: 1px solid var(--border);
    box-shadow: var(--cardShadow);
    border-radius: 2rem;
  }

  .container-wrapper :global(p) {
    margin: 0;
  }

  h1 {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 0.5rem;
    margin: 0;
    width: 100%;
    color: var(--text);
  }
  h1 > svg {
    width: 2rem;
    height: 2rem;
    color: var(--primary-color);
    flex-shrink: 0;
  }

  h1 a {
    text-decoration: none;
    color: currentColor;
  }
  .container-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    justify-items: center;
    grid-gap: 1rem;
    grid-column-gap: 1rem;
    gap: 1rem;
  }

  .container-link {
    display: flex;
    padding: 0.5rem;
    justify-content: center;
    text-decoration: none;
    width: 100%;
    color: var(--text);
    background: var(--surface);
    font-size: var(--font-size-base);
    border-radius: 1rem;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease-in-out;
  }

  .container-link:hover {
    transform: scale(1.1);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
  }

  .container-link:hover span {
    background: var(--animated-gradient);
    background-size: 200% 200%;
    animation: backgroundMove 3s ease infinite;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .with-image {
    position: relative;
    padding-top: 4.5rem;
    margin-top: 8rem;
    height: max-content;
  }
  .with-image > img {
    position: absolute;
    height: 12rem;
    top: -8rem;
  }

  @media (max-width: 768px) {
    .container-content {
      grid-template-columns: 1fr;
    }
  }
</style>
